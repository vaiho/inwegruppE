@model DoorinWebApp.Viewmodel.FullResume

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<head>
    @Styles.Render("~/Content/style.css")
</head>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>resume</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(@Model => @Model.Resume_id)

        <div class="form-group">
            @Html.LabelFor(@Model => @Model.Freelancer_id, "freelancer_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("freelancer_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(@Model => @Model.Freelancer_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(@Model => @Model.Driving_license, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(@Model => @Model.Driving_license, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(@Model => @Model.Driving_license, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(@Model => @Model.Profile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(@Model => @Model.Profile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(@Model => @Model.Profile, "", new { @class = "text-danger" })
            </div>
        </div>
        @using (Html.BeginForm("YourAction"))
        {
            <div>
                <p><b>Lägg till kompetenser</b></p>

                <select class="form-control" id="CompetencesDropDown" name="CompetencesDropDown" onchange="this.form.onsubmit()">
                    @foreach (var item in Model.Competences)
                    {
                        <option> @item.name </option>
                    }
                </select>
            </div>
        }
        <div id="AddMyCompetences">
            <p><b>Mina kompetenser</b></p>

            <select class="form-control" id="Competences" name="Competences">
                @foreach (var item in Model.MyCompetences)
                {
                    <option> @item.name </option>
                }
            </select>
        </div>

        <div>
            <p><b>Lägg till teknologier</b></p>

            <select class="form-control">
                @foreach (var item in Model.Technologies)
                {
                    <option> @item.name </option>
                }
            </select>
        </div>

        <div id="AddMyTechnologies">
            <p><b>Mina teknologier</b></p>

            <select class="form-control">
                @foreach (var item in Model.MyTechnologies)
                {
                    <option> @item.name </option>
                }
            </select>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>


    <h2>Add Links</h2>



    <table class="table" id="tblLinks">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Linkname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Url)
                </th>
            </tr>
        </thead>

        <tbody>
            <tr>
                @*<td>
                        @Html.EditorFor(modelItem => modelItem.Linkname, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(modelItem => modelItem.Url, new { htmlAttributes = new { @class = "form-control" } })
                    </td>*@

            </tr>
        </tbody>

        <tfoot>
            <tr>
                <td><input type="text" id="txtLinkname" /></td>
                <td><input type="text" id="txtLink" /></td>
                <td>
                    <input class="btnAddLink btn btn-default" type="button" name="name" value="Add" />
                </td>

                <td></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
    <br />
    <br />
    <br />
    <br />
    <br />
    <input type="button" class="btn btn-default" id="btnSave" value="Save All" />

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
    <script type="text/javascript">
        $(".btnAddLink").click(function () {
            //Reference the Name and Country TextBoxes.
            var txtLinkname = $("#txtLinkname");
            var txtLink = $("#txtLink");

            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblLinks > TBODY")[0];

            //Add Row.
            var row = tBody.insertRow(-1);

            //Add Name cell.
            var cell = $(row.insertCell(-1));
            cell.html(txtLinkname.val());

            //Add Country cell.
            cell = $(row.insertCell(-1));
            cell.html(txtLink.val());

            //Add Button cell.
            cell = $(row.insertCell(-1));
            var btnRemove = $("<input class=btn btn-default/>");
            btnRemove.attr("type", "button");
            btnRemove.attr("onclick", "Remove(this);");
            btnRemove.val("Remove");
            cell.append(btnRemove);

            //Clear the TextBoxes.
            txtLinkname.val("");
            txtLink.val("");
        });

        function Remove(button) {
            //Determine the reference of the Row using the Button.
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html();
            if (confirm("Do you want to delete: " + name)) {
                //Get the reference of the Table.
                var table = $("#tblLinks")[0];

                //Delete the Table row using it's Index.
                table.deleteRow(row[0].rowIndex);
            }
        };
    </script>








}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">

    $(document).ready(function () {

        $("#CompetencesDropDown").change(function () {

            alert("DropDown selected value is changed ");

            var DropDownSelectedVal = $("#CompetencesDropDown :selected").val();

            if (DropDownSelectedVal != null) {

                $.ajax({

                    url: "/resume/YourActions ",

                    data: { "@Model": DropDownSelectedVal },

                    success: function (response) {

                        alert("If Alert Shown this means Ajax call is working properly");

                    },

                    error: function (xhr) {

                        alert("Something went wrong, please try again");

                    }

                });

            }

        });

    });

</script>



@*
    <script type="text/javascript">

            $(document).ready(function () {

                $("CompetencesDropDown").change(function () {
                    alert("#DropDown selected value is changed");
                    var DropDownSelectedVal = $("#CompetencesDropDown :selected").val();

                    if (DropDownSelectedVal != null) {

                        $.ajax({
                            url: "@(Url.Action("YourActions", "resume"))",

                            type: 'POST',

                            data: { "@Model": DropDownSelectedVal },

                            success: function (response) {

                            alert("If Alert Shown this means Ajax call is working properly");

                    },

                    error: function (xhr) {

                        alert("Something went wrong, please try again");

                    }

                });

            }

                });

            });

    </script>
*@
<script>


    $(document).ready(function () {
        $("#Competences").on("change", function () {
            $.ajax(
                {
                    url: '/resume/AddMyCompetences?Name=' + $(this).attr("value"),
                    type: 'GET',
                    data: "",
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        $("#partialDiv").html(data);
                    },
                    error: function () {
                        alert("error");
                    }
                });
        });
    });</script>

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script>

    $(dokument).ready(function () {

        $("#AddMyCompetences").change(function () {
        })
    })
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
