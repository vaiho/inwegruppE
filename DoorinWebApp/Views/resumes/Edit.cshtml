@model DoorinWebApp.Viewmodel.FullResume

@{
    /**/

    ViewBag.Title = "Edit";
}

<div>
    @Html.ActionLink("Tillbaka", "Details", "freelancers", new { id = Model.Freelancer_id }, null)
</div>

<h2>Redigera ditt CV @Html.DisplayFor(model => model.Firstname) @Html.DisplayFor(model => model.Lastname) </h2>

<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(@Model => @Model.Resume_id)

    <div class="form-group" style="display:none;">

        @Html.LabelFor(@Model => @Model.Freelancer_id, "freelancer_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("freelancer_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(@Model => @Model.Freelancer_id, "", new { @class = "text-danger" })
            <input type="hidden" id="freelancer_id" value="@Model.Freelancer_id" />
        </div>
    </div>



    @*<div class="form-group">
            @Html.LabelFor(@Model => @Model.Driving_license, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(@Model => @Model.Driving_license, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(@Model => @Model.Driving_license, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*Bytt ut ovanstående så att det visas i en dropdown.*@
    <div class="form-group">
        @*Html.LabelFor(model => model.DrivingLicenceChoice, htmlAttributes: new { @class = "control-label col-md-2" })*@
        @Html.Label("B-körkort", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Driving_license, Model.DrivingLicenceChoice, "- Har du körkort? -", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Driving_license, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*Html.LabelFor(@Model => @Model.Profile, htmlAttributes: new { @class = "control-label col-md-2" })*@
        @Html.Label("Profil (kort beskrivning av dig)", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(@Model => @Model.Profile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(@Model => @Model.Profile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <hr />
        <h2>Kompetenser:</h2>
        <br />

        <div class="col-md-6">
            <p><b>Lägg till kompetenser</b></p>
            <select class="form-control" id="Competences" name="Competences">
                <option> Välj en kompetens att lägga till</option>
                @foreach (var item in Model.Competences)
                {
                    <option value="@item.competence_id"> @item.name </option>
                }
            </select>
        </div>

        <div class="col-md-6">
            <p><b>Mina kompetenser</b></p>
            <select class="form-control" id="MyCompetences" name="MyCompetences">
                @foreach (var item in Model.MyCompetences)
                {
                    <option value="@item.competence_id"> @item.name </option>

                }
            </select>
            <input type="submit" value="Ta bort kompetensen" onclick="RemoveCompetence()" />
        </div>
    </div>

    <div class="container"></div>
    <br />
    <hr />

    <div>
        <h2>Teknologier:</h2>
        <br />
        <div class="col-md-6">
            <p><b>Lägg till teknologier</b></p>
            <select class="form-control" id="Technologies" name="Technologies">
                <option> Välj en teknologi att lägga till</option>
                @foreach (var item in Model.Technologies)
                {
                    <option value="@item.technology_id"> @item.name </option>
                }
            </select>

            <p><b>Rankning</b></p>
            <select class="form-control" id="rank" name="rank">
                <option value="1"> 1 </option>
                <option value="2"> 2 </option>
                <option value="3"> 3 </option>
                <option value="4"> 4 </option>
                <option value="5"> 5 </option>
            </select>

            <p><b>Kärnförmågor</b></p>
            <select class="form-control" id="core_technology" name="core_technology">
                <option value="Yes"> Ja </option>
                <option value="No"> Nej </option>
            </select>
            <input type="submit" id="addTechnology" name="addTechnology" value="Lägg till teknologi" onclick="" />

        </div>

        <div class="col-md-6">
            <p><b>Mina teknologier</b></p>
            <select class="form-control" id="MyTechnologies" name="MyTechnologies">
                @foreach (var item in Model.MyTechnologies)
                {
                    <option value="@item.technology_id"> @item.name </option>
                }
            </select>
            <input type="submit" value="Ta bort tekonologi" onclick="RemoveTechnology()" />
        </div>
    </div>


    <hr />

    <div class="container"></div>
    <br />
    <hr />

    <div>
        <h2>Utbildningar: </h2>
        <br />
        <div>
            @foreach (var edu in Model.MyEducations)
            {
                <div class="col-md-6">
                    <p><strong>Titel:</strong> @edu.title</p>
                    <p><strong>Beskrivning:</strong> @edu.description</p>
                    <p><strong>Datum: </strong>@edu.date</p>
                    <p>
                        @Html.ActionLink("Redigera", "Edit", "educations", new { id = edu.education_id }, null) |
                        @Html.ActionLink("Radera", "Delete", "educations", new { id = edu.education_id }, null)
                    </p>
                    <hr />
                </div>
            }
        </div>
        <div class="container"></div>
        @Html.ActionLink("Lägg till utbildning", "Create", "educations", new { id = Model.Resume_id }, null)
    </div>


</div>

    <br />
    <hr />

    <h2>Länkar:</h2>
    <p>Här lägger du till länkar till dina professionella sidor såsom LinkedIn och GitHub)</p>


    //Inspiration från https://www.aspsnippets.com/Articles/Dynamically-add-rows-to-HTML-Table-in-ASPNet-MVC.aspx och
    //https://forums.asp.net/t/2126284.aspx?MVC+Input+in+form+of+Table+With+Add+Delete+Row
    // Ny inspirations-länk för att skicka över objekt med Json:
    //https://andrewlock.net/model-binding-json-posts-in-asp-net-core/?fbclid=IwAR3c5Cr4QzojMNkgMZ4Zy14-CRerAxFKbRVGs6tUeyDjS0ySFk342K5EH1Q#how-it-works-in-asp-net-4
    <table class="table" id="tblLinks">
        <thead>
            <tr>
                <th>
                    @*Html.DisplayNameFor(model => model.Linkname)*@
                    @Html.DisplayName("Namn på länken (exempelvis LinkedIn, GitHub)")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Url)
                </th>
            </tr>
        </thead>

        <tbody>
            @foreach (var link in Model.Link)
            {
                <tr>
                    <td>@link.name</td>
                    <td>@link.link</td>
                    <td><input class="btnRemoveLink btn btn-default" type="button" value="Ta bort" onclick="RemoveLink(this)" /></td>
                </tr>
            }
        </tbody>

        <tfoot>
            <tr>
                <td><input type="text" id="txtLinkname" /></td>
                <td><input type="text" id="txtLink" /></td>
                <td><input type="hidden" id="resume_id" value="@Model.Resume_id" /></td>

                <td>
                    <input class="btnAddLink btn btn-default" type="button" name="name" value="Lägg till" />
                </td>

                <td></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
    //<input type="button" class="btn btn-default" id="btnSave" value="Save All links" />


    <br />
    <br />


    @*<h2><b>Utbildningar:</b></h2>
        <tbody>

            @foreach (var edu in Model.MyEducations)
            {
                <tr>

                    <p><strong>Titel:</strong> @edu.title</p>
                    <p><strong>Beskrivning:</strong> @edu.description</p>
                    <p><strong>Datum: </strong>@edu.date</p>

            </tr>
        }
    </tbody>

    <br />
    <br />
    <br />
    <br />
    <h2><b>Arbetshistoria:</b></h2>
    <p><b>(Här kan du fylla i information om tidigare anställningar)</b></p>
    <table class="table" id="tblWorkhistory">
        <thead>
            <tr>
                <th>
                    @Html.DisplayName("Namn på arbetsgivaren")
                </th>
                <th>
                    @Html.DisplayName("Position")
                </th>
                <th>
                    @Html.DisplayName("Beskrivning av arbetet")
                </th>
                <th>
                    @Html.DisplayName("Datum")
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var work in Model.MyWorkhistory)
            {
                <tr>
                    <td>@work.employer</td>
                    <td>@work.position</td>
                    <td>@work.description</td>
                    <td>@work.date</td>
                    <td><input class="btnRemoveWorkhistory btn btn-default" type="button" value="Ta bort" onclick="RemoveWorkhistory(this)" /></td>
                </tr>
            }
        </tbody>

        <tfoot>
            <tr>
                <td><input type="text" id="txtEmployer" /></td>
                <td><input type="text" id="txtPosition" /></td>
                <td><input type="text" id="txtDescription" /></td>
                <td><input type="text" id="txtDate" /></td>
                <td><input type="hidden" id="resume_id" value="@Model.Resume_id" /></td>

                <td>
                    <input class="btnAddWorkhistory btn btn-default" type="button" name="name" value="Lägg till" />
                </td>

                <td></td>
                <td></td>
            </tr>
        </tfoot>




    </table>
    <br />
    <br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Spara CV" id="btnSave" class="btn btn-default" />
        </div>
    </div>

    <br />
    <br />
    <br />

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
    <script type="text/javascript">
        $(".btnAddLink").click(function () {
            //Reference the Name and Link TextBoxes.
            var txtLinkname = $("#txtLinkname");
            var txtLink = $("#txtLink");


            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblLinks > TBODY")[0];

            //Add Row.
            var row = tBody.insertRow(-1);

            //Add Linkname cell.
            var cell = $(row.insertCell(-1));
            cell.html(txtLinkname.val());

            //Add URL cell.
            cell = $(row.insertCell(-1));
            cell.html(txtLink.val());

            //Add Button cell.
            cell = $(row.insertCell(-1));
            var btnRemove = $("<input class=btn btn-default/>");
            btnRemove.attr("type", "button");
            btnRemove.attr("onclick", "RemoveLink(this);");
            btnRemove.val("Ta bort");
            cell.append(btnRemove);

            //Clear the TextBoxes.
            txtLinkname.val("");
            txtLink.val("");
        });

        function RemoveLink(button) {
            //Determine the reference of the Row using the Button.
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html();
            if (confirm("Do you want to delete: " + name)) {
                //Get the reference of the Table.
                var table = $("#tblLinks")[0];
                //Delete the Table row using it's Index.
                table.deleteRow(row[0].rowIndex);
            }
        };

        $(".btnAddWorkhistory").click(function () {
            //Reference the Name and Link TextBoxes.
            var txtEmployer = $("#txtEmployer");
            var txtPosition = $("#txtPosition");
            var txtDescription = $("#txtDescription");
            var txtDate = $("#txtDate");

            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblWorkhistory > TBODY")[0];

            //Add Row.
            var row = tBody.insertRow(-1);

            //Add employer cell.
            var cell = $(row.insertCell(-1));
            cell.html(txtEmployer.val());

            //Add position cell.
            cell = $(row.insertCell(-1));
            cell.html(txtPosition.val());

            //Add description cell.
            cell = $(row.insertCell(-1));
            cell.html(txtDescription.val());

            //Add date cell.
            cell = $(row.insertCell(-1));
            cell.html(txtDate.val());

            //Add Button cell.
            cell = $(row.insertCell(-1));
            var btnRemove = $("<input class=btn btn-default/>");
            btnRemove.attr("type", "button");
            btnRemove.attr("onclick", "RemoveWorkhistory(this);");
            btnRemove.val("Ta bort");
            cell.append(btnRemove);

            //Clear the TextBoxes.
            txtEmployer.val("");
            txtPosition.val("");
            txtDescription.val("");
            txtDate.val("");
        });



        function RemoveWorkhistory(button) {
            //Determine the reference of the Row using the Button.
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html();
            if (confirm("Do you want to delete: " + name)) {
                //Get the reference of the Table.
                var table = $("#tblWorkhistory")[0]; //TODO:Test för workhistory
                //Delete the Table row using it's Index.
                table.deleteRow(row[0].rowIndex);
            }
        };



        $("body").on("click", "#btnSave", function () {
            //Loop through the Table rows and build a JSON array.
            var links = new Array();
            var resume_id = $("#resume_id").val();
            $("#tblLinks TBODY TR").each(function () {
                var row = $(this);
                var link = {};
                link.Name = row.find("TD").eq(0).html();
                link.Link = row.find("TD").eq(1).html();
                link.resume_id = resume_id;
                links.push(link);

            });

            var wh = new Array();
            var resume_id = $("#resume_id").val();
            $("#tblWorkhistory TBODY TR").each(function () {
                var row = $(this);
                var workhistory = {};
                workhistory.employer = row.find("TD").eq(0).html().trim();
                workhistory.position = row.find("TD").eq(1).html().trim();
                workhistory.description = row.find("TD").eq(0).html().trim();
                workhistory.date = row.find("TD").eq(1).html().trim();

                workhistory.resume_id = resume_id;
                wh.push(workhistory);

            });

            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Links/InsertLinks",
                data: JSON.stringify(links),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    //alert("link(s) updated.");
                }
                });


                $.ajax({
                    type: "POST",
                    url: "/Workhistories/InsertWorkhistory",
                    data: JSON.stringify(wh),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (r) {
                        //alert("link(s) updated.");
                    }
                });


        });

        // Script rörande Competens-DropDownListan
        $(document).ready(function () {
            $("#Competences").change(function () {

                var selectedCompetence = document.getElementById("Competences");
                var competenceId = selectedCompetence.options[selectedCompetence.selectedIndex].value;
                var resume_id = $("#resume_id").val();
                var freelancer_id = $("#freelancer_id").val();

                 var compObj = {
                 competence_id: competenceId, resume_id: resume_id, name: null
             };

                $.ajax({
                    type: "POST",
                    url: "/Resumes/AddMyCompetences",
                    data: JSON.stringify(compObj),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (r) {
                        alert("Kompetensen är tillagd.");
                        document.location.reload(true)
                    },

                    error: function (xhr) {

                        alert("Nånting blev fel.");

                    }
                });

            });


        });
        // Script rörande Competens-DropDownListan slutar här


        // Måste fixa så att detta anropas när man klickar på knappen lägg till "kompetenser". Nu hinner man inte välja
        //Kärnförmåga eller rankning innan metoden anropas
        // Script rörande Technologies-DropDownListan
        $(document).ready(function () {
            $("#Technologies").change(function () {

                var selectedTechnology = document.getElementById("Technologies");
                var technologyId = selectedTechnology.options[selectedTechnology.selectedIndex].value;
                var resume_id = $("#resume_id").val();
                var selectedRank = document.getElementById("rank");
                var rankValue = selectedRank.options[selectedRank.selectedIndex].value;
                var selectedCore = document.getElementById("rank");
                var coreValue = selectedCore.options[selectedCore.selectedIndex].value;

                @*alert(technologyId);*@
                var techObj = {
                    technology_id: technologyId, resume_id: resume_id, core_technology: rankValue,
                    rank: coreValue, resume: null, technology: null
                };

                $.ajax({
                    type: "POST",
                    url: "/Resumes/AddMyTecgnologies",
                    data: JSON.stringify(techObj),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (r) {
                        alert("Teknologin är tillagd.");
                        document.location.reload(true)
                    },

                    error: function (xhr) {

                        alert("Nånting blev fel.");

                    }
                });

            });


        });
            // Script rörande Technologies-DropDownListan slutar här
        var selectedTechnologyId; // ligger här så jag når dem då jag ska ta bort de man valt i dropdwonlistan
        var selectedResumeId;
        // Script ta bort teknology
          $(document).ready(function () {
            $("#MyTechnologies").change(function () {

                var selectedTechnology = document.getElementById("MyTechnologies");
                var technologyId = selectedTechnology.options[selectedTechnology.selectedIndex].value;
                var resume_id = $("#resume_id").val();

                selectedTechnologyId = technologyId;
                selectedResumeId = resume_id;

            });


          });

        function RemoveTechnology() {

             var techObj = {
                    technology_id: selectedTechnologyId, resume_id: selectedResumeId, core_technology: null,
                    rank: 0, resume: null, technology: null
                };

                $.ajax({
                    type: "POST",
                    url: "/Resumes/RemoveMyTecgnologies",
                    data: JSON.stringify(techObj),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (r) {
                        alert("Teknologin är borttagen.");
                        document.location.reload(true)
                    },

                    error: function (xhr) {

                        alert("Nånting blev fel.");

                    }
                });
        }

        var selectedCompetenceId; // ligger här så jag når dem då jag ska ta bort de man valt i dropdwonlistan
        var selectedResumeId;
        // Script ta bort teknology
          $(document).ready(function () {
            $("#MyCompetences").change(function () {

                var selectedCompetence = document.getElementById("MyCompetences");
                var competenceId = selectedCompetence.options[selectedCompetence.selectedIndex].value;
                var resume_id = $("#resume_id").val();

                alert(competenceId);

                selectedCompetenceId = competenceId ;
                selectedResumeId = resume_id;

            });


          });

        function RemoveCompetence() {

            var compObj = {
                    Resume_id: selectedResumeId, Freelancer_id: null,
                    "Driving_license": $('#Driving_license').text(), "Profile": "Hej jag heter", "Competences": "null",
                    "MyCompetences": "null", "Technologies": "null", "Technologies": "null", "Link": "facebook.com",
                    "Linkname": "facebook", "Url": ".com", "Firstname": "hej", "Lastname": "hejson",
                    "Address": "hrj", "City": "sundsvall", "Zipcode": "hej", "Phonenumber": "082",
                    "Email": "0982", "Birthdate": "98", "Birthcity": "sundsvall", "Nationality": "svrige",
                    "Email": "0982", "Birthdate": "98", "Birthcity": "sundsvall", "Nationality": "sverige",
                    "SelectedCompetenceId": SelectedCompetenceId
                };


             /*var compObj = {
                 competence_id: SelectedCompetenceId, resume_id: selectedResumeId, name: null
             };*/
             alert("HejEba");

                $.ajax({
                    type: "POST",
                    url: "/Resumes/RemoveMyCompetences",
                    data: JSON.stringify(compObj),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (r) {
                        alert("Teknologin är borttagen.");
                        document.location.reload(true)
                    },

                    error: function (xhr) {

                        alert("Nånting blev fel.");

                    }
                });
        }

    </script>

    
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



@*Bortkommenterat vid conflict/sync*@

@*


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.resume_id)

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.freelancer_id, "freelancer_id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("freelancer_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.freelancer_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2"><b>Kort om mig</b></div>
                @Html.LabelFor(model => model.profile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.profile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.profile, "", new { @class = "text-danger" })
                </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-md-2"><b>B-körkort</b></div>
                    @Html.LabelFor(model => model.driving_license, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.driving_license, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.driving_license, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Spara" class="btn btn-default" />
                    </div>
                </div>
                </div>
                }



                <hr />
                <div class="row container">
                    <div class="col-md-6">
                        <h2>Kompetenser</h2>
                        <p>fejk Projktledare <a style="margin-left:60px;" href="#">Ta bort</a></p>
                        <p>fejk Designer <a style="padding-left:80px;" href="#">Ta bort</a></p>
                        <p>fejk Programmerare <a style="padding-left:34px;" href="#">Ta bort</a></p>
                        <p style="margin-top:30px;"><a href="#">Lägg till kompetens</a></p>
                        <br />
                        <p>
                            (Eller lägg till kompetens med dropown listan.
                            Eller ska det ske automatiskt när man lägger till en teknologi i den kompetensgruppen?)
                        </p>
                    </div>
                    <div class="col-md-6">
                        <h2>Teknologier</h2>
                        <p>fejk CSS <a style="margin-left:60px;" href="#">Ta bort</a></p>
                        <p>fejk HTML <a style="padding-left:50px;" href="#">Ta bort</a></p>
                        <p>fejk Javascript <a style="padding-left:20px;" href="#">Ta bort</a></p>
                        <p style="margin-top:30px;"><a href="#">Lägg till teknologi</a></p>
                        <br />
                        <p>Eller lägg till teknologi här med dropown listan.</p>
                    </div>
                </div>



                <hr />
                <div class="row container">
                    <div class="col-md-6">
                        <h2>Erfarenheter</h2>
                        <p>fejk Erfarenhet 1 <a style="padding-left:20px;" href="#">Redigera | Ta bort</a></p>
                        <p>fejk Erfarenhet 2 <a style="padding-left:20px;" href="#">Redigera | Ta bort</a></p>
                        <p>fejk Erfarenhet 3 <a style="padding-left:20px;" href="#">Redigera | Ta bort</a></p>
                        <p style="margin-top:30px;"><a href="#">Lägg till erfarenhet</a></p>
                        <br />
                        <p>Eventuellt att man kan göra en partial view av workhistories/edit och skicka in resume_id???? Hinner inte kolla nu</p>
                    </div>
                    <div class="col-md-6">
                        <h2>Utbildning</h2>
                        <p>fejk Utbildning 1 <a style="padding-left:20px;" href="#">Redigera | Ta bort</a></p>
                        <p>fejk Utbildning 2 <a style="padding-left:20px;" href="#">Redigera | Ta bort</a></p>
                        <p>fejk Utbildning 3 <a style="padding-left:20px;" href="#">Redigera | Ta bort</a></p>
                        <p style="margin-top:30px;"><a href="#">Lägg till utbildning</a></p>
                        <br />
                        <p>Eventuellt att man kan göra en partial view av educations/edit och skicka in resume_id???? Hinner inte kolla nu</p>
                    </div>
                </div>*@
