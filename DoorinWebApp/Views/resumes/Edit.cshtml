@model DoorinWebApp.Viewmodel.FullResume

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>resume</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Resume_id)

    <div class="form-group">
        @Html.LabelFor(model => model.Freelancer_id, "freelancer_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("freelancer_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Freelancer_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Driving_license, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Driving_license, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Driving_license, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Profile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profile, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        <p><b>Lägg till kompetenser</b></p>

        <select class="form-control" id="Competences" name="Competences">
            @foreach (var item in Model.Competences)
            {
                <option name="option" Html.ActionLink("option", "AddMyCompetences" , "resumesController" , new { competence=@item , fullResume=@Model })> @item.name </option>
            }
        </select>
    </div>
    <div>
        @foreach (var item in Model.MyCompetences)
        {
            <textarea>@item.name</textarea>
        }
    </div>


    <div class="form-group">
        <br />

        <p><b>Lägg till länkar</b></p>

        @*@Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>*@
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
        </div>
    </div>*@




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
